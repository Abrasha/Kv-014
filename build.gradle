// dependency versions
def spring_version = '4.2.5.RELEASE'
def hibernate_version = '5.1.0.Final'
def postgres_version = '9.4.1208.jre7'
def hsqldb_version = '2.3.3'
def junit_version = '4.12'
def apache_commons_lang_version = '3.4'
def apache_commons_collections_version = '4.1'
def sourceComp = 1.8
def sourceVersion = '0.0.1-SNAPSHOT'

ext {
    hibernate_core = "org.hibernate:hibernate-core:$hibernate_version"
    hibernate_java8 = "org.hibernate:hibernate-java8:$hibernate_version"
    spring_context = "org.springframework:spring-context:$spring_version"
    spring_jdbc = "org.springframework:spring-jdbc:$spring_version"
    spring_test = "org.springframework:spring-test:$spring_version"
    postgres_jdbc_driver = "org.postgresql:postgresql:$postgres_version"
    apache_commons_lang = "org.apache.commons:commons-lang3:$apache_commons_lang_version"
    apache_commons_collections4 = "org.apache.commons:commons-collections4:$apache_commons_collections_version"
    junit = "junit:junit:$junit_version"
    hsqldb = "org.hsqldb:hsqldb:$hsqldb_version"


}

allprojects {
    apply plugin: 'java'
    sourceCompatibility = sourceComp
    version = sourceVersion
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        testCompile junit
    }
}
apply plugin: 'pmd'
pmd {
    ignoreFailures = true
    reportsDir = file("$project.buildDir/pmd/")
    ruleSetFiles = files('/pmd-ruleset.xml')
}
task pmd(type: Pmd) {
    subprojects.each() {
        source += fileTree('/' + it.name + '/src/test/java') + fileTree('/' + it.name + '/src/main/java')
    }
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
check.doLast {
    project.tasks.getByName("pmd").execute()
}
